  People:

    andy

    vareesha ( designer )

    bill ( product manager )
      nick

    how ( developer )
      john
        todo: 
          get a list of data for andy ( talk to Mark )
          get some screen shots and videos of ui

  SAM ( EMC ) engineering, procurment, and construction
    ( business dev ) enter specs while on site => sales force => sam ( engineering ) 
      => sod 
        => categorized by type of data
          => charting tools utilzie
            => by meters, time ( days, months, etc. )
    data is not always correct in SAM

  SOD => yes, I've worked with it.
    UI => users do not trust alerts

  SEEDS 5.1 
    features: Local Raw Alerting
      alerts:  obtained via gateways => ( rabbit mq ) message busts => pushes data into soil => alerting engine running ( service / scheduled task )
        99% of alerts => processing input of raw data
        on backend, will be pushing alerts straight through rabbit mq to alert engine
        alias event="alert"
        need to know of event and respond within 60 seconds.  current time is 15 minutes on the back-end.
     A commissioning tool => list of all gateways
     integration:
       Wants to merge SEEDS ( more gate-way based / micro ) features into SOD ( fleet-wide / macro )
       SEEDS (gateway) => get SAM ?gateway = gateway

  SOD 
    lead: Andy
    CURRENT:
      want to be able to see performance issues across the fleet
      specs:
        over 700 power-plants
        600 mwz globally distributed

      over three years of work in SOD  
      should perform top notch and anticipate that there will be some blocks 
        in some places - depends on where you are; madrid - service not very good.
      minimize clicks

    ORIGINAL SOD DEV ISSUES:
      quickly developed because customer wanted it within a month.
      how to avoid:
        ensure we can handle the load
          what is the load?  
            535,000 tags growing at 13% per month
            90% of data coming to server today is empty / missing values / 0's
              wants to build in intelligence so that we only bring in ones if possible

  UI: 
    argument for change:  
      general: want it to be fleet wide.
      technical reason: modularize projects
      with three applications using the database in three different calculations
        it is very hard to maintain.  Have to maintain all of the applications.
        Just maintain one.  Any change to database, may require changes to all
        three applications.

    likes of old interface
      3x3 matrix.  9 options to start from
      can quickly drill down from here
      should be useful for investors, roc users, etc.
        ( should we have custom views for each type of user? )

      who has access to what?
    
    new-name: 
      We will be having a new name for this application, perhaps.

    TABS:
      Reporting:
        Wrap what nelson is working on for reporting and forcasting and incorporate that into the 'reporting-tab'
 
